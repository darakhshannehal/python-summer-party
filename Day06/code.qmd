---
title: "Ice Cream Sales Seasonal Performance Assessment"
format: html
---
```{python}

#You are a Product Insights Analyst working with the Ben & Jerry's sales strategy team to investigate seasonal sales patterns through comprehensive data analysis. The team wants to understand how temperature variations and uniQue transaction characteristics impact ice cream sales volume. Your goal is to perform detailed data cleaning and exploratory analysis to uncover meaningful insights about seasonal sales performance.

# Question 1 of 3
# Identify and remove any duplicate sales transactions from the dataset to ensure accurate analysis of seasonal patterns.

# The following tables are loaded as pandas DataFrames with the same names: ice_cream_sales_data
# ice_cream_sales_data(transaction_id, product_name, sale_date, sales_volume, temperature)

# Please print your final result or dataframe

# Solutions
# Libraries
import pandas as pd

# Load Data
ice_cream_sales_data = pd.read_csv('day06_ice_cream_sales_data.csv')

# Ensure 'pre_order_date' is a datetime type
ice_cream_sales_data['sale_date'] = pd.to_datetime(ice_cream_sales_data['sale_date'])

# Remove duplicates
ice_cream_sales_data  = ice_cream_sales_data.drop_duplicates()
```

```{python}

# Question 2 of 3
# Create a pivot table to summarize the total sales volume of ice cream products by month and temperature range.
#Use the following temperature bins where each bin excludes the upper bound but includes the lower bound:
#- Less than 60 degrees
#- 60 to less than 70 degrees
#- 70 to less than 80 degrees
#- 80 to less than 90 degrees
#- 90 to less than 100 degrees
#- 100 degrees or more

# Solutions
# Create Temperature Bins
bins = [float('-inf'), 60, 70, 80, 90, 100, float('inf')]
labels = [
    'Less than 60 degrees',
    '60 to less than 70 degrees',
    '70 to less than 80 degrees',
    '80 to less than 90 degrees',
    '90 to less than 100 degrees',
    '100 degrees or more'
]

ice_cream_sales_data['temp_bin'] = pd.cut(
    ice_cream_sales_data['temperature'],
    bins=bins,
    labels=labels,
right = True
)

# Extract Month from Sale Date
ice_cream_sales_data['sale_month'] = pd.to_datetime(
    ice_cream_sales_data['sale_date']
).dt.month

# Create Pivot Table Now summarize the sales volume by month and temperature bin
pivot_table = ice_cream_sales_data.pivot_table(
    index='sale_month',
    columns='temp_bin',
    values='sales_volume',
    aggfunc='sum'
)

print(pivot_table)

```

```{python}
# Question 3 of 3
# Can you detect any outliers in the monthly sales volume using the Inter Quartile Range (IQR) method? A month is considered an outlier if it falls below Q1 minus 1.5 times the IQR or above Q3 plus 1.5 times the IQR.

# Solutions
# Group data by sale_month to calculate monthly totals
monthly_sales_df = ice_cream_sales_data.groupby('sale_month')['sales_volume'].sum()

# Calculate Q1, Q3 and IQR
Q1 = monthly_sales_df.quantile(0.25)
Q3 = monthly_sales_df.quantile(0.75)
IQR = Q3 - Q1

# Define outlier thresholds
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

# Identify outlier months
outliers = monthly_sales_df[(monthly_sales_df < lower_bound) | (monthly_sales_df > upper_bound)]

# Print outlier months
print("Outlier months based on IQR method:")

print(outliers)
```
